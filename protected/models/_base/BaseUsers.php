<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property integer $id
 * @property string $user_name
 * @property string $password
 * @property string $activation_key
 * @property string $last_visit_time
 * @property string $ip_address
 * @property string $create_time
 * @property integer $status
 *
 * @property Guides[] $guides
 * @property Profiles[] $profiles
 * @property Roles[] $roles
 */
abstract class BaseUsers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Users|Users', $n);
	}

	public static function representingColumn() {
		return 'user_name';
	}

	public function rules() {
		return array(
			array('status', 'numerical', 'integerOnly'=>true),
			array('user_name, activation_key', 'length', 'max'=>150),
			array('password, ip_address', 'length', 'max'=>45),
			array('last_visit_time, create_time', 'safe'),
			array('user_name, password, activation_key, last_visit_time, ip_address, create_time, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_name, password, activation_key, last_visit_time, ip_address, create_time, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'guides' => array(self::HAS_MANY, 'Guides', 'user_id'),
			'profiles' => array(self::HAS_MANY, 'Profiles', 'user_id'),
			'roles' => array(self::MANY_MANY, 'Roles', 'users_has_roles(users_id, roles_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'roles' => 'UsersHasRoles',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_name' => Yii::t('app', 'User Name'),
			'password' => Yii::t('app', 'Password'),
			'activation_key' => Yii::t('app', 'Activation Key'),
			'last_visit_time' => Yii::t('app', 'Last Visit Time'),
			'ip_address' => Yii::t('app', 'Ip Address'),
			'create_time' => Yii::t('app', 'Create Time'),
			'status' => Yii::t('app', 'Status'),
			'guides' => null,
			'profiles' => null,
			'roles' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_name', $this->user_name, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('activation_key', $this->activation_key, true);
		$criteria->compare('last_visit_time', $this->last_visit_time, true);
		$criteria->compare('ip_address', $this->ip_address, true);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}